<?xml version="1.0" encoding="utf-8" ?>
<Database>
  <Algorithms>
    <Algorithm Type="Oll" Name="28" ImageFileName="oll28.gif" Moves="(M' U M) U2 (M' U M)" Comments="The middle slices should be done with the left ring finger for M' and the left thumb for M. The (M' U M) group may take some getting used to." />
    <Algorithm Type="Oll" Name="57" ImageFileName="oll57.gif" Moves="(R U R' U') (M' U R U') Rw'" Comments="There's nothing too fancy here. The finger tricks used are pretty common. I do the slice turn as M' now because I think it's a little faster that way." />
    <Algorithm Type="Oll" Name="20" ImageFileName="oll20.gif" Moves="Rw' (R U) (R U R' U' Rw2) (R2' U) (R U') Rw'" Comments="Here, I use the slice as (Rw' R) because it flows a little nicer. This is the least common OLL case (1/216). The finger tricks here are pretty simple." />
    <Algorithm Type="Oll" Name="23" ImageFileName="oll23.gif" Moves="(R2' D) (R' U2) (R D') (R' U2 R')" Comments="This is one of the most awkward OLLs with all correctly flipped edges. It's still pretty fast, though." />
    <Algorithm Type="Oll" Name="24" ImageFileName="oll24.gif" Moves="(Lw' U') (L U) (R U') (Rw' F)" Comments="This one is pretty fast. The only problem is that you have to alternate hands a couple times. I recommend being able to do the mirror of this case as well." />
    <Algorithm Type="Oll" Name="25" ImageFileName="oll25.gif" Moves="F' (Rw U R' U') (Rw' F R)" Comments="Custom. Super fast." />
    <Algorithm Type="Oll" Name="27" ImageFileName="oll27.gif" Moves="(R U R' U) (R U2 R')" Comments="This is the Sune. Your right hand should never come off of the cube during the execution at any time." />
    <Algorithm Type="Oll" Name="26" ImageFileName="oll26.gif" Moves="(R U2) (R' U' R U' R')" Comments="This is just the inverse of the Sune, called the Antisune." />
    <Algorithm Type="Oll" Name="22" ImageFileName="oll22.gif" Moves="(R U2') (R2' U') (R2 U') (R2' U2' R)" Comments="The execution of this algorithm is pretty neat. The R2 turns should alternate in direction so that they can be performed by the right hand without letting go of the cube. The left hand holds the cube and makes the U' turns." />
    <Algorithm Type="Oll" Name="21" ImageFileName="oll21.gif" Moves="L' U' L U' L' U L U' L' U2 L" Comments="Custom. Double sune (or anti-sune, I can never remember) with the left hand." />
    <Algorithm Type="Oll" Name="3" ImageFileName="oll03.gif" Moves="Fw (R U R' U') Fw' U' F (R U R' U') F'" Comments="This is a clever combination of the two six move OLLs." />
    <Algorithm Type="Oll" Name="4" ImageFileName="oll04.gif" Moves="Fw (R U R' U') Fw' U F (R U R' U') F'" Comments="This is another combination of the two six move OLLs." />
    <Algorithm Type="Oll" Name="17" ImageFileName="oll17.gif" Moves="(R U R' U) (R' F R F') U2 (R' F R F')" Comments="This one is very fast. Each of the three triggers should be lightning fast." />
    <Algorithm Type="Oll" Name="19" ImageFileName="oll19.gif" Moves="Rw' (R U) (R U R' U' Rw) x (R2' U) (R U')" Comments="This alg is the same as the &quot;X&quot; orientation (#20) except with a slight modification." />
    <Algorithm Type="Oll" Name="18" ImageFileName="oll18.gif" Moves="F (R U R' U) y' (R' U2) (R' F R F')" Comments="This case has a couple of fast triggers in it." />
    <Algorithm Type="Oll" Name="2" ImageFileName="oll02.gif" Moves="F (R U R' U') S (R U R' U') Fw'" Comments="This algorithm is just the easy T-orientation followed by the easy P-orientation.The S can take a little getting used to." />
    <Algorithm Type="Oll" Name="1" ImageFileName="oll01.gif" Moves="(R U2) (R2' F R F') U2' (R' F R F')" Comments="This is just (R U2 R') followed by a couple of sledgehammers." />
    <Algorithm Type="Oll" Name="33" ImageFileName="oll33.gif" Moves="(R U R' U') (R' F R F')" Comments="This orientation makes up the second half of the Y-permutation. Both triggers are lightning fast, so this should easily be sub-1 second." />
    <Algorithm Type="Oll" Name="45" ImageFileName="oll45.gif" Moves="F (R U R' U') F'" Comments="This is the quickest and shortest OLL case. I use the left index for the U' and the right thumb for the F'." />
    <Algorithm Type="Oll" Name="44" ImageFileName="oll44.gif" Moves="Fw (R U R' U') Fw'" Comments="This is very similar to the easy T orientation (#45) except with a double layer turn instead of just F. It is helpful to know the inverse to avoid a U2 before the alg." />
    <Algorithm Type="Oll" Name="43" ImageFileName="oll43.gif" Moves="Fw' (L' U' L U) Fw" Comments="This is just the mirror of OLL #44. I also recommend being able to perform this alg from a U2." />
    <Algorithm Type="Oll" Name="32" ImageFileName="oll32.gif" Moves="(R Dw) (L' Dw') (R' U) (Lw U Lw')" Comments="There should be a nice balance between both hands in performing this algorithm." />
    <Algorithm Type="Oll" Name="31" ImageFileName="oll31.gif" Moves="(R' U') F (U R U' R') F R" Comments="This is just the mirror of OLL #32, but I don't perform it as such. Instead, I do an algorithm that contains the inverse of the easy T orienation in it." />
    <Algorithm Type="Oll" Name="38" ImageFileName="oll38.gif" Moves="(R U R' U) (R U' R' U') (R' F R F')" Comments="There's nothing difficult about any of these three triggers." />
    <Algorithm Type="Oll" Name="36" ImageFileName="oll36.gif" Moves="(L' U' L U') (L' U L U) (L F' L' F)" Comments="This is just the mirror of OLL #38. You could also do U2 and perform a right handed version of this algorithm." />
    <Algorithm Type="Oll" Name="54" ImageFileName="oll54.gif" Moves="(Rw U) (R' U) (R U') (R' U) (R U2' Rw')" Comments="The left hand only holds the cube while the right does everything else. This is sort of like a fat double Sune." />
    <Algorithm Type="Oll" Name="53" ImageFileName="oll53.gif" Moves="(Rw' U') (R U') (R' U) (R U') (R' U2 Rw)" Comments="This is similar to OLL #54, but the first U' is done with the left index finger." />
    <Algorithm Type="Oll" Name="50" ImageFileName="oll50.gif" Moves="(R B' R B R2') U2 (F R' F' R)" Comments="Use the right hand to do the first set of moves all in one motion. The second trigger should be very fast." />
    <Algorithm Type="Oll" Name="49" ImageFileName="oll49.gif" Moves="(R' F R' F' R2) U2 y (R' F R F')" Comments="This algorithm is very similar to OLL #50 with an added cube rotation to make the second trigger easier to perform." />
    <Algorithm Type="Oll" Name="48" ImageFileName="oll48.gif" Moves="F (R U R' U') (R U R' U') F'" Comments="This is just the easy T-orientation performed twice in a row." />
    <Algorithm Type="Oll" Name="47" ImageFileName="oll47.gif" Moves="F' (L' U' L U) (L' U' L U) F" Comments="This is just the mirror of OLL #48." />
    <Algorithm Type="Oll" Name="39" ImageFileName="oll39.gif" Moves="(L F') (L' U' L U) F U' L'" Comments="The right thumb gets a lot of work done at the end of this algorithm.The first trigger can be a little tricky if you don't grip the cube properly. The end can be a bit tricky, too." />
    <Algorithm Type="Oll" Name="40" ImageFileName="oll40.gif" Moves="(R' F) (R U R' U') F' U R" Comments="This is just the mirror of OLL #39." />
    <Algorithm Type="Oll" Name="34" ImageFileName="oll34.gif" Moves="(R U R2' U') (R' F) (R U) (R U') F'" Comments="This case is fast. It takes a little while to get used to the R2' not being just R', but the algorithm flows very nicely. I make the last F' turn with my right index finger." />
    <Algorithm Type="Oll" Name="46" ImageFileName="oll46.gif" Moves="(R' U') (R' F R F') (U R)" Comments="There's nothing fancy here. This is just a sledgehammer with a setup move." />
    <Algorithm Type="Oll" Name="5" ImageFileName="oll05.gif" Moves="(Rw' U2) (R U R' U Rw)" Comments="This is just a fat Antisune performed from the back of the cube." />
    <Algorithm Type="Oll" Name="6" ImageFileName="oll06.gif" Moves="(Rw U2) (R' U' R U' Rw')" Comments="This is just a fat Antisune." />
    <Algorithm Type="Oll" Name="7" ImageFileName="oll07.gif" Moves="(Rw U R' U) (R U2 Rw')" Comments="This case is just the inverse of one of the squares (OLL #6)." />
    <Algorithm Type="Oll" Name="12" ImageFileName="oll12.gif" Moves="(M U2) (R' U' R U') (R' U2 R) U M'" Comments="This is just a Sune from the back right except with a setup move." />
    <Algorithm Type="Oll" Name="8" ImageFileName="oll08.gif" Moves="(Rw' U' R U') (R' U2 Rw)" Comments="Like OLL #7, this is just the inverse of one of the squares (OLL #5)." />
    <Algorithm Type="Oll" Name="11" ImageFileName="oll11.gif" Moves="Rw' (R2 U R' U R U2 R') U M'" Comments="Like OLL #12, this is just a Sune with a setup move." />
    <Algorithm Type="Oll" Name="37" ImageFileName="oll37.gif" Moves="F (R U') (R' U' R U) (R' F')" Comments="This is one of the fastest orientations. It's the first half of the Y-permutation. The last six moves are EXTREMELY FAST." />
    <Algorithm Type="Oll" Name="35" ImageFileName="oll35.gif" Moves="(R U2) (R2 F) (R F' R U2 R')" Comments="This is just the sledgehammer with a setup move." />
    <Algorithm Type="Oll" Name="10" ImageFileName="oll10.gif" Moves="(R U R' U) (R' F R F') (R U2 R')" Comments="This is kind of like a Sune with a sledgehammer mixed in." />
    <Algorithm Type="Oll" Name="9" ImageFileName="oll09.gif" Moves="(R U R' U' R' F) (R2 U R' U' F')" Comments="This is a pretty fast algorithm that flows very nicely." />
    <Algorithm Type="Oll" Name="51" ImageFileName="oll51.gif" Moves="Fw (R U R' U') (R U R' U') Fw'" Comments="This is just the easy P-orientation repeated twice." />
    <Algorithm Type="Oll" Name="52" ImageFileName="oll52.gif" Moves="(R U R' U R Dw') (R U' R' F')" Comments="The Dw' turn eliminates the need for a rotation, so this algorithm can be done very quickly." />
    <Algorithm Type="Oll" Name="56" ImageFileName="oll56.gif" Moves="Fw (R U R' U') Fw' F (R U R' U') (R U R' U') F'" Comments="I do this algorithm as the easy P-orientation followed by the easy T-orientation repeated twice." />
    <Algorithm Type="Oll" Name="55" ImageFileName="oll55.gif" Moves="(R U2) (R2 U' R U' R' U2) (F R F')" Comments="This is just a Sune performed from the back right with a setup at the beginning and a sledgehammer at the end." />
    <Algorithm Type="Oll" Name="13" ImageFileName="oll13.gif" Moves="(Rw U' Rw' U' Rw U Rw' y' (R' U R)" Comments="I like this algorithm. I just wish it didn't have a rotation." />
    <Algorithm Type="Oll" Name="16" ImageFileName="oll16.gif" Moves="(Rw U Rw') (R U R' U') (Rw U' Rw')" Comments="This is just a fast trigger with a fast setup before and after." />
    <Algorithm Type="Oll" Name="14" ImageFileName="oll14.gif" Moves="(R' F) (R U R' F' R) y' (R U' R')" Comments="This case is pretty nice, but like OLL #13, I don't like the rotation." />
    <Algorithm Type="Oll" Name="15" ImageFileName="oll15.gif" Moves="(Lw' U' Lw) (L' U' L U) (Lw' U Lw)" Comments="This is just the mirror of OLL #16." />
    <Algorithm Type="Oll" Name="41" ImageFileName="oll41.gif" Moves="(R U') (R' U2) (R U) y (R U') (R' U' F')" Comments="This case looks difficult, but it's actually pretty easy and flows kind of nicely." />
    <Algorithm Type="Oll" Name="30" ImageFileName="oll30.gif" Moves="(R2' U R' B') (R U') (R2' U) (Lw U Lw')" Comments="After the first set of moves, everything picks up a bit and it's easy to finish the algorithm." />
    <Algorithm Type="Oll" Name="42" ImageFileName="oll42.gif" Moves="(L' U) (L U2') (L' U') y' (L' U) (L U F)" Comments="This is just the mirror of OLL #41." />
    <Algorithm Type="Oll" Name="29" ImageFileName="oll29.gif" Moves="(L2 U' L B) (L' U) (L2 U') (Rw' U' Rw)" Comments="This is just the mirror of OLL #30." />

    <Algorithm Type="Pll" Name="Aa" ImageFileName="pll01.gif" Moves="x (R' U R') D2 (R U' R') D2 R2" Comments="This is a basic corner 3-cycle. It is one of my favorite and fastest algorithms. Perform the D2s with the left hand and everything else with the right." />
    <Algorithm Type="Pll" Name="Ab" ImageFileName="pll02.gif" Moves="x R2 D2 (R U R') D2 (R U' R) [y'] x (L U' L) D2 (L' U L) D2 L2" Comments="This is just the inverse of the other A perm. It is performed in a very similar manner." />
    <Algorithm Type="Pll" Name="E" ImageFileName="pll03.gif" Moves="x' (R U') (R' D) (R U R' D') (R U R' D) (R U') (R' D')" Comments="This alg is just two orientations performed consecutively." />
    <Algorithm Type="Pll" Name="Ua" ImageFileName="pll06.gif" Moves="(R U' R U) (R U) (R U') (R' U' R2)" Comments="This is just a simple 3-edge cycle. It is almost as fast as the corner cycles. I solve this case with the bar at the front or the back." />
    <Algorithm Type="Pll" Name="Ub" ImageFileName="pll07.gif" Moves="(R2 U) (R U R' U') (R' U') (R' U R')" Comments="This is the inverse of the other U perm. I place my hands slightly differently for this algorithm. I solve this case with the bar at the front or the back." />
    <Algorithm Type="Pll" Name="H" ImageFileName="pll05.gif" Moves="(M2' U) (M2' U2) (M2' U) M2'" Comments="This is extremely easy to recognize and can be performed VERY quickly. The M'2 is actually performed as (M'M') with rapid pushing at the back face of the M layer with the ring and then middle fingers." />
    <Algorithm Type="Pll" Name="Z" ImageFileName="pll04.gif" Moves="(M2' U) (M2' U) (M' U2) (M2' U2) (M' U2)" Comments="The Z permutation is performed very similarly to the H perm. The last U2 is not necessary if you account for it before the algorithm." />
    <Algorithm Type="Pll" Name="Ja" ImageFileName="pll08.gif" Moves="(R' U L') U2 (R U' R') U2 (L R U')" Comments="I perform the R of the [R L] a split second after I start the L so that I can immediately perform the U' to AUF when the L face has been moved to where it belongs." />
    <Algorithm Type="Pll" Name="Jb" ImageFileName="pll09.gif" Moves="(R U R' F') (R U R' U') (R' F) (R2 U') (R' U')" Comments="This is the same as the T perm with the last four moves instead performed at the beginning." />
    <Algorithm Type="Pll" Name="T" ImageFileName="pll10.gif" Moves="(R U R' U') (R' F) (R2 U') (R' U' R U) (R' F')" Comments="This is the T permuation. It is long but definitely very fast and easy. It can be performed in almost one swift motion without any readjusting of the fingers. Note that it is a combination of two easy orientations." />
    <Algorithm Type="Pll" Name="Rb" ImageFileName="pll11.gif" Moves="(R' U2) (R U2) (R' F R U R' U') (R' F' R2 U')" Comments="This is a pretty straightforward alg that flows pretty nicely." />
    <Algorithm Type="Pll" Name="Ra" ImageFileName="pll12.gif" Moves="R U R' F' R U2 R' U2 R' F R U R U2 R' U'" Comments="You could also just mirror Rb, but this alg is more right hand friendly. Notice the similarity with the Jb permutation." />
    <Algorithm Type="Pll" Name="F" ImageFileName="pll13.gif" Moves="R' U' F' (R U R' U') (R' F) (R2 U') (R' U' R U) (R' U R)" Comments="This is a T permutation with a 3 move setup in the beginning and a cancellation of one of those moves at the end." />
    <Algorithm Type="Pll" Name="Ga" ImageFileName="pll15.gif" Moves="(R2' Uw) (R' U R' U' R Uw') R2' y' (R' U R)" Comments="This alg has a pretty decent flow to it and can be performed almost in one motion until the rotation." />
    <Algorithm Type="Pll" Name="Gb" ImageFileName="pll16.gif" Moves="(R' U' R) y (R2' Uw R' U) (R U' R Uw' R2')" Comments="This is the inverse of Ga. Note how similar they look. I perform this one almost exactly the same way." />
    <Algorithm Type="Pll" Name="Gc" ImageFileName="pll14.gif" Moves="(R2' Uw' R U') (R U R' Uw R2) (Fw R' Fw')" Comments="You could rotate and insert the pair instead of performing the last three moves as shown." />
    <Algorithm Type="Pll" Name="Gd" ImageFileName="pll17.gif" Moves="(R U R') y' (R2' Uw' R U') (R' U R' Uw R2)" Comments="This is just the inverse of Gc. I execute it very similarly because most of the moves overlap in the same manner." />
    <Algorithm Type="Pll" Name="V" ImageFileName="pll18.gif" Moves="(R' U R' Dw') (R' F' R2 U') (R' U R' F) (R F)" Comments="This is one of my least favorite permutations because the flow just isn't there." />
    <Algorithm Type="Pll" Name="Na" ImageFileName="pll19.gif" Moves="(z) D (R' U) (R2 D' R D U') (R' U) (R2 D' R U' R)" Comments="This alg could also be performed using &lt;R,U,L&gt; if you don't do the rotation, but this way is faster with practice." />
    <Algorithm Type="Pll" Name="Nb" ImageFileName="pll20.gif" Moves="(z) U' (R D') (R2' U R' D U') (R D') (R2' U R' D R')" Comments="This is just the mirror of the other N permutation." />
    <Algorithm Type="Pll" Name="Y" ImageFileName="pll21.gif" Moves="(F R U') (R' U' R U) (R' F') (R U R' U') (R' F R F')" Comments="This is very quick and can be performed without any adjustments of where the fingers are. It is just a combination of two quick orientations." />
  </Algorithms>
</Database>
